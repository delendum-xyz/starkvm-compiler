begin                                # let mut a = 1                           :   2
  push.1                             # 1                                       :   2
  loc_store.0                        # init a                                  :   2
                                    # let mut b = 1                           :   3
  push.1                             # 1                                       :   3
  loc_store.1                        # init b                                  :   3
                                    # let mut n = 10                          :   4
  push.10                            # 10                                      :   4
  loc_store.2                        # init n                                  :   4
                                    # let mut tmp = 0                         :   5
  push.0                             # 0                                       :   5
  loc_store.3                        # init tmp                                :   5
  push.0                             # begin switch  with PC = 0               :   6
  mem_store.1000                     # PC                                      :   6
  push.1                             # make loop start                         :   6
  while.true                         # begin the SWITCH                        :   6
    mem_load.1000                    # load PC                                 :   6
    u32wrapping_add.1                # increment by 1                          :   6
    dup                              # keep on top of stack for comparisons    :   6
    mem_store.1000                   # save PC                                 :   6
    dup
    u32checked_eq.1                  # check if PC is forcase 1                :   6
    if.true                          # start code for this case                :   6
      drop                           # remove PC from stack                    :   6
                                    # LABEL 2                                 :   7
    else                             # end case 0                              :   7
      dup                            # keep PC on stack in case check fails    :   7
      u32checked_eq.2                # check if PC is for this case            :   7
      if.true                        # start code for this case                :   7
        drop                         # remove PC from stack                    :   7
                                    # tmp = a                                 :   8
        loc_load.0                   # <-a                                     :   8
        loc_store.3                  # tmp<-                                   :   8
                                    # a = a + b                               :   9
        loc_load.0                   # <-a                                     :   9
        loc_load.1                   # <-b                                     :   9
        u32checked_add               # +                                       :   9
        loc_store.0                  # a<-                                     :   9
                                    # b = tmp                                 :  10
        loc_load.3                   # <-tmp                                   :  10
        loc_store.1                  # b<-                                     :  10
                                    # n = n -1                                :  11
        loc_load.2                   # <-n                                     :  11
        push.1                       # 1                                       :  11
        u32checked_sub               # -                                       :  11
        loc_store.2                  # n<-                                     :  11
        loc_load.2                   # <-n                                     :  12
        push.0                       # 0                                       :  12
        u32checked_gt                # >                                       :  12
        if.true                      # Rust if                                 :  12
                                    # GOTO 2                                  :  13
          push.1                     # jump address minus 1                    :  13
          mem_store.1000             # set PC to 2                             :  13
                                    # -------                                 :  13
        end                          # Rust endif                              :  14
      end                            # switch case 2                           :  15
    end                              # switch case 1                           :  15
    push.2                           # PC is still on the stack                :  15
    u32unchecked_lte                 # condition for continuation of loop      :  15
  end                                # while loop                              :  15
                                    # SWITCH EXIT                             :  15
                                    # eval a                                  :  16
  loc_load.0                         # <-a                                     :  16
                                    # eval b                                  :  17
  loc_load.1                         # <-b                                     :  17
end