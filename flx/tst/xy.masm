proc.xx.0
  push.1
  add
  sub 
  if.true
    add add add
  else
    sub sub 
  end
  dup dup mul mul drop
  repeat.5
    drop swap.1
  end
  add
end

begin                              # validated opcode                        :   2
                                   # let mut n = 1234                        :   3
  push.1234                        # 1234                                    :   3
  loc_store.0                      # init n                                  :   3
                                   # let mut counter = 0                     :   4
  push.0                           # 0                                       :   4
  loc_store.1                      # init counter                            :   4
  push.0                           # begin switch  with PC = 0               :   5
  mem_store.1000                   # PC                                      :   5
  push.1                           # make loop start                         :   5
  while.true                       # begin the SWITCH                        :   5
    mem_load.1000                  # load PC                                 :   5
    u32wrapping_add.1              # increment by 1                          :   5
    dup                            # keep on top of stack for comparisons    :   5
    mem_store.1000                 # save PC                                 :   5
    dup
    u32checked_eq.1                # check if PC is forcase 1                :   5
    if.true                        # start code for this case                :   5
      drop                         # remove PC from stack                    :   5
                                   # LABEL 2                                 :   6
    else                           # end case 0                              :   6
      dup                          # keep PC on stack in case check fails    :   6
      u32checked_eq.2              # check if PC is for this case            :   6
      if.true                      # start code for this case                :   6
        drop                       # remove PC from stack                    :   6
        loc_load.0                 # <-n                                     :   7
        push.1                     # 1                                       :   7
        u32checked_eq              # ==                                      :   7
        if.true                    # Rust if                                 :   7
          push.0xFFFFFFFF          # BREAK                                   :   8
          dup                      # keep PC on stack                        :   8
          mem_store.1000           # ->PC                                    :   8
        end                        # Rust endif                              :   9
                                   # LABEL 3                                 :  10
      else                         # end case 1                              :  10
        dup                        # keep PC on stack in case check fails    :  10
        u32checked_eq.3            # check if PC is for this case            :  10
        if.true                    # start code for this case                :  10
          drop                     # remove PC from stack                    :  10
          loc_load.0               # <-n                                     :  11
          push.2                   # 2                                       :  11
          u32checked_mod           # %                                       :  11
          push.0                   # 0                                       :  11
          u32checked_eq            # ==                                      :  11
          if.true                  # Rust if                                 :  11
                                   # n = n / 2                               :  12
            loc_load.0             # <-n                                     :  12
            push.2                 # 2                                       :  12
            u32checked_div         # /                                       :  12
            loc_store.0            # n<-                                     :  12
                                   # counter = counter + 1                   :  13
            loc_load.1             # <-counter                               :  13
            push.1                 # 1                                       :  13
            u32checked_add         # +                                       :  13
            loc_store.1            # counter<-                               :  13
                                   # GOTO 2                                  :  14
            push.1                 # jump address minus 1                    :  14
            mem_store.1000         # set PC to 2                             :  14
                                   # -------                                 :  14
          end                      # Rust endif                              :  15
                                   # LABEL 4                                 :  16
        else                       # end case 2                              :  16
          dup                      # keep PC on stack in case check fails    :  16
          u32checked_eq.4          # check if PC is for this case            :  16
          if.true                  # start code for this case                :  16
            drop                   # remove PC from stack                    :  16
            loc_load.0             # <-n                                     :  17
            push.2                 # 2                                       :  17
            u32checked_mod         # %                                       :  17
            push.1                 # 1                                       :  17
            u32checked_eq          # ==                                      :  17
            if.true                # Rust if                                 :  17
                                   # n = 3*n + 1                             :  18
              push.3               # 3                                       :  18
              loc_load.0           # <-n                                     :  18
              u32checked_mul       # *                                       :  18
              push.1               # 1                                       :  18
              u32checked_add       # +                                       :  18
              loc_store.0          # n<-                                     :  18
                                   # counter = counter + 1                   :  19
              loc_load.1           # <-counter                               :  19
              push.1               # 1                                       :  19
              u32checked_add       # +                                       :  19
              loc_store.1          # counter<-                               :  19
                                   # GOTO 2                                  :  20
              push.1               # jump address minus 1                    :  20
              mem_store.1000       # set PC to 2                             :  20
                                   # -------                                 :  20
            end                    # Rust endif                              :  21
          end                      # switch case 4                           :  22
        end                        # switch case 3                           :  22
      end                          # switch case 2                           :  22
    end                            # switch case 1                           :  22
    push.4                         # PC is still on the stack                :  22
    u32unchecked_lte               # condition for continuation of loop      :  22
  end                              # while loop                              :  22
                                   # SWITCH EXIT                             :  22
                                   # eval counter                            :  23
  loc_load.1                       # <-counter                               :  23
end                                # Miden                                   :  24
