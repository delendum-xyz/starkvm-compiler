class MidenOpcodes {

  // A field element is 64 bits, a machine word is 256 bits = 4 field elements
  // u32 is 32 bits = 4 bytes = 8 hex digits
  // field element is 16 hex digits
  // machine word is 64 hex digits
  // 
  // NOTE: the parser has to recognize control instructions
  // if.true, while.true, repeat.$, end, else
  // these aren't listed at the moment
  //
  // the push instruction is a weirdo
  // it has a variable number of arguments up to 16
  // not listed at the moment
  //
  // proc.$, syscall, exec, call not listed
  // library operations not listed
  //
  // exp is a bit weird .. listed but maybe should be special
  //

  fun field_opcodes() {
     "assert"                 ,1
     "assertz"                ,2
     "assert_eq"              ,2

     "add"                    ,1
     "add.$"                  ,2
     "sub"                    ,2
     "sub.$"                  ,2
     "mul"                    ,1
     "mul.$"                  ,2
     "div"                    ,2
     "div.$"                  ,2
     "neg"                    ,1
     "inv"                    ,1
     "pow2"                   ,16
     "exp.u$"                 ,73
     "exp.$"                  ,73
     "not"                    ,1
     "and"                    ,1
     "or"                     ,1
     "xor"                    ,7
     "eq"                     ,1
     "eq.$"                   ,2
     "neq"                    ,1
     "neq.$"                  ,2
     "lt"                     ,17
     "lte"                    ,18
     "gt"                     ,18
     "gte"                    ,18
     "eqw"                    ,15

  };

  fun u32_opcodes() {

    "u32test"                 ,5               
    "u32testw"                ,23  
    "u32assert"               ,3  
    "u32assert.1"             ,3    
    "u32assert.2"             ,1
    "u32assertw"              ,6
    "u32cast"                 ,2
    "u32split"                ,1

    "u32checked_add"          ,4    ,
    "u32checked_add.$"        ,6
    "u32overflowing_add"      ,1 
    "u32overflowing_add.$"    ,3
    "u32wrapping_add"         ,2
    "u32wrapping_add.$"       ,4
    "u32overflowing_add3"     ,1
    "u32wrapping_add3.$"      ,2

    "u32checked_sub"          ,4
    "u32checked_sub.$"        ,6
    "u32overflowing_sub"      ,1
    "u32overflowing_sub.$"    ,2
    "u32wrapping_sub"         ,2
    "u32wrapping_sub.$"       ,4

    "u32checked_mul"          ,4
    "u32checked_mul.$"        ,6
    "u32overflowing_mul"      ,1
    "u32overflowing_mul.$"    ,3
    "u32wrapping_mul"         ,2
    "u32wrapping_mul.$"       ,4
    "u32overflowing_madd"     ,1
    "u32wrapping_madd.$"      ,2

    "u32checked_div"          ,3
    "u32checked_div.$"        ,5
    "u32unchecked_div"        ,2
    "u32unchecked_div.$"      ,4

    "u32checked_mod"          ,4
    "u32checked_mod.$"        ,6
    "u32unchecked_mod"        ,3
    "u32unchecked_mod.$"      ,5

    "u32checked_divmod"       ,2
    "u32checked_divmod.$"     ,4
    "u32unchecked_divmod"     ,1
    "u32unchecked_divmod.$"   ,3

    "u32checked_and"          ,1
    "u32checked_or"           ,6
    "u32checked_xor"          ,1
    "u32checked_not"          ,5

    "u32checked_shl"          ,47
    "u32checked_shl.$"        ,4
    "u32unchecked_shl"        ,40
    "u32unchecked_shl.$"      ,3

    "u32checked_shr"          ,47
    "u32checked_shr.$"        ,4
    "u32unchecked_shr"        ,47
    "u32unchecked_shr.$"      ,4

    "u32checked_rotl"         ,47
    "u32checked_rotl.$"       ,4
    "u32unchecked_rotl"       ,40
    "u32unchecked_rotl.$"     ,3

    "u32checked_rotr"         ,59
    "u32checked_rotr.$"       ,6
    "u32unchecked_rotr"       ,44
    "u32unchecked_rotr.$"     ,3
 
    "u32checked_eq"           ,2
    "u32checked_eq.$"         ,4
    "u32checked_neq"          ,3
    "u32checked_neq.$"        ,5

    "u32checked_lt"           ,6
    "u32unchecked_lt"         ,5
    "u32checked_lte"          ,8
    "u32unchecked_lte"        ,7
    "u32checked_gt"           ,7
    "u32unchecked_gt"         ,6
    "u32checked_gte"          ,7
    "u32unchecked_gte"        ,6

    "u32checked_min"          ,9
    "u32unchecked_min"        ,8
    "u32checked_max"          ,10
    "u32unchecked_max"        ,9

    "drop"                    ,1
    "dropw"                   ,4
    "padw"                    ,4
    "dup"                     ,1
    "dup.$"                   ,3
    "dupw"                    ,4
    "dupw.$"                  ,4
    "swap"                    ,6
    "swap.$"                  ,6
    "swapw.$"                 ,1
    "movup.$"                 ,4
    "movupw.$"                ,3
    "movdn.$"                 ,4
    "movdnw.$"                ,3
    "cswap"                   ,1
    "cswapw"                  ,1
    "cdrop"                   ,2
    "cdropw"                  ,4

    "sdepth"                  ,2
    "caller"                  ,1
    "locaddr.$"               ,2
    "adv_push.$"              ,0
    "adv_loadw"               ,1
    "adv_pipe"                ,2

    "mem_load"                ,1
    "mem_load.$"              ,2
    "mem_loadw"               ,1
    "mem_loadw.$"             ,2

    "mem_store"               ,2
    "mem_store.$"             ,4
    "mem_storew"              ,1
    "mem_storew.$"            ,3
    "mem_stream"              ,2

    "loc_load.$"              ,4
    "loc_loadw.$"             ,4
    "loc_store.$"             ,5
    "loc_storew.$"            ,4

    "rpperm"                  ,1
    "rphash"                  ,16
    "mtree_get"               ,9
    "mtree_set"               ,14
    "mtree_cwm"               ,12
  } 
}

